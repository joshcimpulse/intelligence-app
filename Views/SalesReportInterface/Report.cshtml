
@{
    ViewData["Title"] = "Report";
}


<h1>Automated Sales Report</h1>
<h3>User:  @User.Identity.Name.ToString()</h3>

<h3> Report Parameters: @ViewData["reportMonth"], @ViewData["reportYear"] </h3>

<div id="loader" style="display:block">
</div>

<br /><br />


<div id="reportContent"  style="display: none">
    <div class="container">
        <div class="row">
            <h3 style=" text-align: left">Sales by Invoice Date</h3>
        </div>
        <div class="row">
            <br\></br\>
            <div class="row">
                <div class="col-md-6">
                    <div id="sbdChart"></div>
                </div>
                <div class="col-md-6" style="margin-top: 30px">
                    <div class="row">
                        <h4 style="margin-left: 50px;">Ranking by Day</h4>
                    </div>
                    <div class="row">
                        <table class="table" id="SBDtable" style="margin-left: 50px; margin-top: 10px">
                            <tr>
                                <th>Rank</th>
                                <th>Date</th>
                                <th>Net Sales</th>
                                <th>GP $</th>
                                <th>GP %</th>

                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 pull-left">
                <div class="row">
                    <h3 style=" text-align: left">Customer Breakdown</h3>
                </div>

                <div class="row">

                    <div id="cbChart"></div>
                </div>

            </div>
            <div class="col-md-6 pull-left">
                <div class="row">
                    <h3 style=" text-align: left">Product Breakdown</h3>
                </div>

                <div class="row">

                    <div id="pbChart" style="margin-top:30px"></div>
                </div>

            </div>
        </div>
    </div>
</div>
    @section scripts{


        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script >
            function runLoadAnimation() {
                myVar = setTimeout(loadContent, 3000);
            }
            function loadContent() {
                document.getElementById("loader").style.display = "none";
                document.getElementById("reportContent").style.display = "block";
            }
            function renderSalesByDayGraph() { 
                var option = {
                    title: 'Sales Invoiced vs Date',
                    width: 500,
                    height: 400,
                    chartArea: { left: 0 }
                };

                arr = [];
                arr.push(['x', 'sin(x)', 'cos(x)', 'sin(x)^2']);
                for (var i = 0; i < 70; i++) {
                    var x = 0.1 * i;
                    arr.push([x, Math.sin(x), Math.cos(x), Math.sin(x) * Math.sin(x)]);
                }
                data = google.visualization.arrayToDataTable(arr, false);
                var chart = new google.visualization.LineChart(document.getElementById('sbdChart'));
                chart.draw(data, option);

            }

            function renderCustomerBreakdownGraph() { 
                var data = new google.visualization.DataTable();
                var rawData = [
                    ['Soc. Sec. Tax', { v: 30, f: '300' }],
                    ['Income Tax', { v: 35, f: '35%' }],
                    ['Borrowing', { v: 15, f: '15%' }],
                    ['Corp. Tax', { v: 12, f: '12%' }],
                    ['Misc', { v: 8, f: '8%' }]
                ];
                data.addColumn('string', 'Tax Type');
                data.addColumn('number', 'Tax Percentage');
                data.addRows(rawData);
                var option = {
                    title: 'Tax Structure in US',
                    width: 500,
                    height: 400,
                    chartArea: { left: "0" }
                };
                option.is3D = true;
                chart = new google.visualization.PieChart(document.getElementById('cbChart'));
                chart.draw(data, option);
            }
            function renderProductBreakdownGraph(){ 
                var data = google.visualization.arrayToDataTable([
                    ['City', '2010 Population',],
                    ['New York City, NY', 8175000],
                    ['Los Angeles, CA', 3792000],
                    ['Chicago, IL', 2695000],
                    ['Houston, TX', 2099000],
                    ['Philadelphia, PA', 1526000]
                ]);

                var options = {
                    title: 'Population of Largest U.S. Cities',
                    chartArea: { width: '50%' },
                    hAxis: {
                        title: 'Total Population',
                        minValue: 0
                    },
                    vAxis: {
                        title: 'City'
                    }
                };

                var chart = new google.visualization.BarChart(document.getElementById('pbChart'));

                chart.draw(data, options);


            }
            function drawChart() {

                renderSalesByDayGraph();
                renderCustomerBreakdownGraph();
                renderProductBreakdownGraph();

            }
            $(document).ready(function () {
                runLoadAnimation();
                google.charts.load('current', { 'packages': ['corechart'] });
                google.charts.setOnLoadCallback(drawChart);


            });
        </script>
    }
